{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","logoType","url","removeX","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","console","log","push","toUpperCase","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":"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","file":"main.2c6e4959.map","sourceRoot":"..\\src","sourcesContent":["const $siteList = $(\".siteList\")\nconst $lastLi = $($siteList.find(\"li.last\"))\nconst x = (localStorage.getItem(\"x\"))\nconst xObject = JSON.parse(x);\n\nconst hashMap=xObject|| [\n    { logo: \"C\", logoType:\"image\",url: \"https://codepen.io\" },\n    { logo: \"F\",logoType:\"image\", url: \"https://figma.com\" },\n    { logo: \"C\",logoType:\"image\", url: \"https://codesandbox.io\" },\n    { logo: \"C\",logoType:\"image\", url: \"https://caniuse.com\" },\n    { logo: \"G\",logoType:\"image\", url: \"https://github.com\" },\n    { logo: \"G\",logoType:\"image\", url: \"https://gitee.com\" },\n    { logo: \"I\",logoType:\"image\", url: \"https://www.iconfont.cn\" },\n    { logo: \"S\",logoType:\"image\", url: \"https://stackoverflow.com\" }\n];\nconst removeX = (url) => {\n    return url.replace(\"http//\", \"\")\n        .replace(\"https://\", \"\")\n        .replace(\"www.\", \"\").replace(/\\/.*/, \"\")\n}\nconst render = () => {\n    $siteList.find('li:not(.last)').remove()\n    hashMap.forEach((node, index) => {\n      const $li = $(`<li>\n        <div class=\"site\">\n          <div class=\"logo\">${node.logo}</div>\n          <div class=\"link\">${removeX(node.url)}</div>\n          <div class=\"close\">\n            <svg class=\"icon\">\n              <use xlink:href=\"#icon-close\"></use>\n            </svg>\n          </div>\n        </div>\n      </li>`).insertBefore($lastLi)\n      $li.on('click', () => {\n        window.open(node.url)\n      })\n      $li.on('click', '.close', (e) => {\n        e.stopPropagation() // 阻止冒泡\n          hashMap.splice(index, 1)\n          render();\n      })\n    })\n}\n\nrender();\n\n$(\".addButton\")\n    .on(\"click\", () => {\n        let url = window.prompt(\"添加网址\")\n        if (url.indexOf(\"http\") !== 0) {\n            url = \"https://\" + url\n        }\n        console.log(url)\n        hashMap.push({\n            logo: removeX(url)[0].toUpperCase(), logoType: \"image\", url: url\n        });\n        $($siteList.find(\"li:not(.last)\").remove()) //使用$在siteList中寻找li标签，唯独不要last\n        \n        render();\n    })\n\n\nwindow.onbeforeunload = () => {\n    const string = JSON.stringify(hashMap)   //把hashMap这个对象转换成字符串\n    localStorage.setItem(\"x\", string)  //把hashMap以字符串的形式存到localStorage中的x\n}\n$(document).on(\"keypress\", (e) => {\n  const { key } = e\n  console.log(e)\n  for (let i = 0; i < hashMap.length; i++) {\n    if ((hashMap[i].logo.toLowerCase() === key))\n      window.open(hashMap[i].url)\n  }\n})\n"]}